{"ast":null,"code":"var _jsxFileName = \"/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { fetchFromAPI } from \"./helpers\";\nimport { useStripe } from \"@stripe/react-stripe-js\";\n/*\n\nsummary of what is happening\n\nUsing state to change the requirement of what the user needs\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Checkout() {\n  _s();\n\n  const stripe = useStripe();\n  const [product, setProduct] = useState({\n    name: \"Basic Shoes\",\n    description: \"A pair of shoes that will magically fit any size! wohooo!\",\n    images: [\"https://images.pexels.com/photos/2048548/pexels-photo-2048548.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\"],\n    amount: 2299,\n    currency: \"usd\",\n    quantity: 0\n  });\n\n  const changeQuantity = v => setProduct({ ...product,\n    quantity: Math.max(0, product.quantity + v)\n  }); //calcs next quantity based on the next value\n  //Did no decide to use axios instead used native fetch api\n\n\n  const handleClick = async event => {\n    const body = {\n      line_items: [product]\n    };\n    const {\n      id: sessionId\n    } = await fetchFromAPI(\"checkouts\", {\n      body\n    });\n    const {\n      error\n    } = await stripe.redirectToCheckout({\n      sessionId\n    });\n\n    if (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stripe Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Shopping-cart example scenario. Change the quantity of the products below, then click checkout to open the Stripe Checkout window.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Stripe Amount: \", product.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: product.images[0],\n        width: \"250px\",\n        alt: \"product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm btn-warning\",\n        onClick: () => changeQuantity(-1),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          margin: \"20px\",\n          fontSize: \"2em\"\n        },\n        children: product.quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        onClick: () => changeQuantity(1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleClick,\n      disabled: product.quantity < 1,\n      children: \"Start Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Checkout, \"x9eTIGfG3W/XVPlps2CsjmyXwKo=\", false, function () {\n  return [useStripe];\n});\n\n_c = Checkout;\nexport function CheckoutSuccess() {\n  const url = window.location.href;\n  const sessionId = new URL(url).searchParams.get(\"session_id\");\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: [\"Checkout was a Success! \", sessionId]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 10\n  }, this);\n}\n_c2 = CheckoutSuccess;\nexport function CheckoutFail() {\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Checkout unfortunately failed!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 10\n  }, this);\n}\n_c3 = CheckoutFail;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Checkout\");\n$RefreshReg$(_c2, \"CheckoutSuccess\");\n$RefreshReg$(_c3, \"CheckoutFail\");","map":{"version":3,"sources":["/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/Checkout.js"],"names":["React","useState","fetchFromAPI","useStripe","Checkout","stripe","product","setProduct","name","description","images","amount","currency","quantity","changeQuantity","v","Math","max","handleClick","event","body","line_items","id","sessionId","error","redirectToCheckout","console","log","margin","fontSize","CheckoutSuccess","url","window","location","href","URL","searchParams","get","CheckoutFail"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AAEA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC;AACrCO,IAAAA,IAAI,EAAE,aAD+B;AAErCC,IAAAA,WAAW,EAAE,2DAFwB;AAGrCC,IAAAA,MAAM,EAAE,CACN,2GADM,CAH6B;AAMrCC,IAAAA,MAAM,EAAE,IAN6B;AAOrCC,IAAAA,QAAQ,EAAE,KAP2B;AAQrCC,IAAAA,QAAQ,EAAE;AAR2B,GAAD,CAAtC;;AAWA,QAAMC,cAAc,GAAIC,CAAD,IACrBR,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcO,IAAAA,QAAQ,EAAEG,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYX,OAAO,CAACO,QAAR,GAAmBE,CAA/B;AAAxB,GAAD,CADZ,CAdyB,CAgBzB;AAEA;;;AACA,QAAMG,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnC,UAAMC,IAAI,GAAG;AAAEC,MAAAA,UAAU,EAAE,CAACf,OAAD;AAAd,KAAb;AACA,UAAM;AAAEgB,MAAAA,EAAE,EAAEC;AAAN,QAAoB,MAAMrB,YAAY,CAAC,WAAD,EAAc;AACxDkB,MAAAA;AADwD,KAAd,CAA5C;AAIA,UAAM;AAAEI,MAAAA;AAAF,QAAY,MAAMnB,MAAM,CAACoB,kBAAP,CAA0B;AAChDF,MAAAA;AADgD,KAA1B,CAAxB;;AAIA,QAAIC,KAAJ,EAAW;AACTE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF,GAbD;;AAeA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA,kBAAKlB,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,sCAAoBF,OAAO,CAACK,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAK,QAAA,GAAG,EAAEL,OAAO,CAACI,MAAR,CAAe,CAAf,CAAV;AAA6B,QAAA,KAAK,EAAC,OAAnC;AAA2C,QAAA,GAAG,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,cAJF,eAME;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,OAAO,EAAE,MAAMI,cAAc,CAAC,CAAC,CAAF,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAYE;AAAM,QAAA,KAAK,EAAE;AAAEc,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAb;AAAA,kBACGvB,OAAO,CAACO;AADX;AAAA;AAAA;AAAA;AAAA,cAZF,eAeE;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,CAAD,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eA8BE;AAAA;AAAA;AAAA;AAAA,YA9BF,eAgCE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAEI,WAFX;AAGE,MAAA,QAAQ,EAAEZ,OAAO,CAACO,QAAR,GAAmB,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA,kBADF;AA0CD;;GA5EeT,Q;UACCD,S;;;KADDC,Q;AA8EhB,OAAO,SAAS0B,eAAT,GAA2B;AAChC,QAAMC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA5B;AACA,QAAMX,SAAS,GAAG,IAAIY,GAAJ,CAAQJ,GAAR,EAAaK,YAAb,CAA0BC,GAA1B,CAA8B,YAA9B,CAAlB;AACA,sBAAO;AAAA,2CAA6Bd,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;MAJeO,e;AAMhB,OAAO,SAASQ,YAAT,GAAwB;AAC7B,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;MAFeA,Y","sourcesContent":["import React, { useState } from \"react\";\nimport { fetchFromAPI } from \"./helpers\";\nimport { useStripe } from \"@stripe/react-stripe-js\";\n\n/*\n\nsummary of what is happening\n\nUsing state to change the requirement of what the user needs\n\n*/\nexport function Checkout() {\n  const stripe = useStripe();\n\n  const [product, setProduct] = useState({\n    name: \"Basic Shoes\",\n    description: \"A pair of shoes that will magically fit any size! wohooo!\",\n    images: [\n      \"https://images.pexels.com/photos/2048548/pexels-photo-2048548.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\",\n    ],\n    amount: 2299,\n    currency: \"usd\",\n    quantity: 0,\n  });\n\n  const changeQuantity = (v) =>\n    setProduct({ ...product, quantity: Math.max(0, product.quantity + v) });\n  //calcs next quantity based on the next value\n\n  //Did no decide to use axios instead used native fetch api\n  const handleClick = async (event) => {\n    const body = { line_items: [product] };\n    const { id: sessionId } = await fetchFromAPI(\"checkouts\", {\n      body,\n    });\n\n    const { error } = await stripe.redirectToCheckout({\n      sessionId,\n    });\n\n    if (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <h2>Stripe Checkout</h2>\n      <p>\n        Shopping-cart example scenario. Change the quantity of the products below, then\n        click checkout to open the Stripe Checkout window.\n      </p>\n\n      <div className=\"product\">\n        <h3>{product.name}</h3>\n        <h4>Stripe Amount: {product.amount}</h4>\n\n        <img src={product.images[0]} width=\"250px\" alt=\"product\" />\n\n        <button\n          className=\"btn btn-sm btn-warning\"\n          onClick={() => changeQuantity(-1)}\n        >\n          -\n        </button>\n        <span style={{ margin: \"20px\", fontSize: \"2em\" }}>\n          {product.quantity}\n        </span>\n        <button\n          className=\"btn btn-sm btn-success\"\n          onClick={() => changeQuantity(1)}\n        >\n          +\n        </button>\n      </div>\n\n      <hr />\n\n      <button\n        className=\"btn btn-primary\"\n        onClick={handleClick}\n        disabled={product.quantity < 1}\n      >\n        Start Checkout\n      </button>\n    </>\n  );\n}\n\nexport function CheckoutSuccess() {\n  const url = window.location.href;\n  const sessionId = new URL(url).searchParams.get(\"session_id\");\n  return <h3>Checkout was a Success! {sessionId}</h3>;\n}\n\nexport function CheckoutFail() {\n  return <h3>Checkout unfortunately failed!</h3>;\n}\n"]},"metadata":{},"sourceType":"module"}