[{"/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/index.js":"1","/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/App.js":"2","/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/Checkout.js":"3","/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/helpers.js":"4","/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/Payments.js":"5","/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/Home.js":"6","/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/Customers.js":"7","/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/CheckoutSuccess.js":"8","/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/CheckoutFail.js":"9","/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/Subscriptions.js":"10"},{"size":533,"mtime":1624563875960,"results":"11","hashOfConfig":"12"},{"size":2246,"mtime":1624828965992,"results":"13","hashOfConfig":"12"},{"size":2479,"mtime":1624826821053,"results":"14","hashOfConfig":"12"},{"size":559,"mtime":1624733690676,"results":"15","hashOfConfig":"12"},{"size":2997,"mtime":1624827020400,"results":"16","hashOfConfig":"12"},{"size":128,"mtime":1624828078583,"results":"17","hashOfConfig":"12"},{"size":158,"mtime":1624828921020,"results":"18","hashOfConfig":"12"},{"size":198,"mtime":1624828538230,"results":"19","hashOfConfig":"12"},{"size":184,"mtime":1624828558286,"results":"20","hashOfConfig":"12"},{"size":163,"mtime":1624828630475,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ven87e",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/index.js",[],["45","46"],"/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/App.js",[],"/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/Checkout.js",[],"/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/helpers.js",["47"],"const API = \"http://localhost:3000\";\n\n//fetch function helper to be able to fetch data from the api\n\nexport async function fetchFromAPI(endpointURL, opts) {\n  const { method, body } = { method: \"POST\", body: null, ...opts };\n\n  const user = auth.currentUser;\n  const token = user && (await user.getIdToken());\n\n  const res = await fetch(`${API}/${endpointURL}`, {\n    method,\n    ...(body && { body: JSON.stringify(body) }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  return res.json();\n}\n","/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/Payments.js",["48"],"import React, { useState } from \"react\";\nimport { fetchFromAPI } from \"./helpers\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\nfunction Payments() {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [amount, setAmount] = useState(0);\n  const [paymentIntent, setPaymentIntent] = useState();\n\n  // Create a payment intent on the server\n  const createPaymentIntent = async (event) => {\n    // Clamp amount to Stripe min/max\n    const validAmount = Math.min(Math.max(amount, 50), 9999999);\n    setAmount(validAmount);\n\n    // Make the API Request\n    const pi = await fetchFromAPI(\"payments\", {\n      body: { amount: validAmount },\n    });\n    setPaymentIntent(pi);\n  };\n\n  // Handle the submission of card details\n  const handleSubmit = async (event) => {\n    event.preventDefault(); //prevents opening new page for submit form\n\n    const cardElement = elements.getElement(CardElement);\n\n    // Confirm Card Payment\n    const { paymentIntent: updatedPaymentIntent, error } =\n      await stripe.confirmCardPayment(paymentIntent.client_secret, {\n        payment_method: { card: cardElement }, //apply to payment intent, tries to charges immediately\n      });\n\n    if (error) {\n      console.error(error);\n      error.payment_intent && setPaymentIntent(error.payment_intent);\n    } else {\n      setPaymentIntent(updatedPaymentIntent);\n    }\n  };\n\n  return (\n    <>\n      <h2>Payments</h2>\n      <p>One-time payment scenario.</p>\n      <div className=\"well\">\n        <PaymentIntentData data={paymentIntent} />\n      </div>\n\n      <div className=\"well\">\n        <h3>Step 1: Create a Payment Intent</h3>\n        <p>\n          Change the amount of the payment in the form, then request a Payment\n          Intent to create context for one-time payment. Min 50, Max 9999999\n        </p>\n\n        <div className=\"form-inline\">\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            value={amount}\n            disabled={paymentIntent}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n          <button\n            className=\"btn btn-success\"\n            disabled={amount <= 0}\n            onClick={createPaymentIntent}\n            hidden={paymentIntent}\n          >\n            Ready to Pay ${(amount / 100).toFixed(2)}\n          </button>\n        </div>\n      </div>\n      <hr />\n\n      <form\n        onSubmit={handleSubmit}\n        className=\"well\"\n        hidden={!paymentIntent || paymentIntent.status === \"succeeded\"}\n      >\n        <h3>Step 2: Submit a Payment Method</h3>\n        <p>Collect credit card details, then submit the payment.</p>\n        <p>\n          Normal Card: <code>4242424242424242</code>\n        </p>\n        <p>\n          3D Secure Card: <code>4000002500003155</code>\n        </p>\n\n        <hr />\n\n        <CardElement />\n        <button className=\"btn btn-success\" type=\"submit\">\n          Pay\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default Payments;","/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/Home.js",[],"/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/Customers.js",[],"/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/CheckoutSuccess.js",[],"/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/CheckoutFail.js",[],"/home/natc02/Desktop/DevelopmentWork/projectsBeforeUseInApplication/reactpaymentsolution/src/Subscriptions.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":2,"message":"54","line":8,"column":16,"nodeType":"55","messageId":"56","endLine":8,"endColumn":20},{"ruleId":"57","severity":2,"message":"58","line":50,"column":10,"nodeType":"59","messageId":"60","endLine":50,"endColumn":27},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-undef","'auth' is not defined.","Identifier","undef","react/jsx-no-undef","'PaymentIntentData' is not defined.","JSXIdentifier","undefined","no-global-assign","no-unsafe-negation"]